# CircleCI 2.1 버전을 사용한다는 의미입니다.
# 각 버전에 따라 사용할 수 있는 속성이 다릅니다.
version: 2.1

# `node`라는 이름으로 `circleci/node@1.1.6` Orb를 사용한다는 의미입니다.
orbs:
  node: circleci/node@1.1.6
  docker: circleci/docker@1.0.0

# `build-and-test`라는 이름을 가진 Job의 속성을 나열합니다.
jobs:
  build-and-test:

    # 이 Job의 executor는 node Orb의 default executor 입니다.
    executor:
      name: node/default
    
    # 이 Job에서 수행할 명령어 모음입니다.
    steps:

      # 이 프로젝트 코드를 executor에 다운로드 합니다.
      - checkout

      # node Orb의 with-cache 명령어 입니다.
      # node_modules 폴더를 package.json을 키로 가지는 캐시에 생성합니다.
      - node/with-cache:

          # 캐싱되어 있던 node_modules 폴더를 불러 온 후 실행할 명령어를 입력합니다.
          # 이 steps가 끝난 후의 node_modules를 캐시에 저장합니다.
          steps:
            - run: npm install
            - run: npm test
  docker:
    executor: docker/machine
    steps:
      - checkout
      - node/with-cache:
          steps:
            - run: npm install
      - run: docker build -t circleci/example .
      - run: docker save -o circleci-example.tar circleci/example
      - add_ssh_keys:
          fingerprints:
            - "4b:7d:60:c6:c6:8f:f3:13:d5:c4:1e:41:48:e7:5b:e3"
      - run: rsync -ah -e "ssh -o StrictHostKeyChecking=no" circleci-example.tar ec2-user@34.232.69.182:/path/to/send
      - run: ssh ec2-user@34.232.69.182 "cd /path/to/send; docker load -i circleci-example.tar; docker run circleci/example"
# build-and-test라는 workflow에는 build-and-test라는 Job을 가지고 있다는 의미입니다.
workflows:
    build-and-test:
      jobs:
        - build-and-test
        - docker:
            requires:
                - build-and-test